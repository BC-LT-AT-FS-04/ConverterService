name: CI Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  CONTAINER_REGISTRY_URL: "${{ vars.CONTAINER_REGISTRY_URL }}"
  CONTAINER_REGISTRY_USER: "${{ vars.CONTAINER_REGISTRY_USER }}"
  CONTAINER_REGISTRY_PASSWORD: "${{ secrets.CONTAINER_REGISTRY_PASSWORD }}"

#Detailed jobs for the pipeline to dos
jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          sudo apt-get install -y --no-install-recommends libgl1-mesa-glx libglib2.0-0 ffmpeg perl
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov  # Install testing dependencies

      - name: Run Unit Tests
        run: |
          pytest

      - name: Generate Code Coverage
        run: |
          pytest --cov=tests/ --cov-report xml:coverage.xml
     
      - name: Static Code Analysis with SonarQube
        uses: sonarsource/sonarqube-scan-action@v4.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=ConverterService
            -Dsonar.python.coverage.reportPaths=coverage.xml
      
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
  
  push_image:
      runs-on: ubuntu-24.04

      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build docker image
        run: sudo docker compose build api-converter
            
      #To be able to connect to the nexus container registry
      - name: Add docker daemon file
        run: |
          echo '{"insecure-registries": ["${{ vars.CONTAINER_REGISTRY_URL }}"]}' | sudo tee /etc/docker/daemon.json
          sudo cat /etc/docker/daemon.json

      - name: Restart docker service
        run: sudo systemctl restart docker

      - name: Login to nexus container registry
        run: echo $CONTAINER_REGISTRY_PASSWORD | sudo docker login ${{ vars.CONTAINER_REGISTRY_URL }} -u $CONTAINER_REGISTRY_USER --password-stdin 

      - name: Push docker image
        run: | 
          sudo docker tag converterservice-api-converter ${{ vars.CONTAINER_REGISTRY_URL }}/converterservice:${{ github.run_number }}
          sudo docker push ${{ vars.CONTAINER_REGISTRY_URL }}/converterservice:${{ github.run_number }}
